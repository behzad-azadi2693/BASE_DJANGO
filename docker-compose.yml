version: '3.9'

services:
  postgres:
    image: ${DB_IMAGE}
    hostname: ${DB_HOST}
    container_name: postgres
    command: -p ${DB_PORT}
    restart: on-failure
    environment: 
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks: 
      - main
    expose:
      - ${DB_PORT}
    ports: 
      - ${DB_PORT}:${DB_PORT}
    volumes: 
      - ./data/postgres:/var/lib/postgresql/data 
      
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: on-failure
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    depends_on:
      - postgres
    ports:
      - "5050:80"
    volumes: 
      - /data/pgadmin:/var/lib/pgadmin/data
    networks: 
      - main
      
  web:
    build: .
    hostname: web
    container_name: web
    restart: on-failure
    command: sh -c "python3 django_project/manage.py makemigrations && 
                    python3 django_project/manage.py migrate --no-input && 
                    python3 django_project/manage.py collectstatic --no-input && 
                    uwsgi --ini uwsgi.ini"
                    #gunicorn -k gevent --chdir django_project django_project.config.wsgi:application -b 0.0.0.0:8000"
    depends_on: 
      - postgres
    expose: 
      - "8000"
    networks:
      - main
    volumes: 
      - .:/web/
      - ./django_project/media:/web/django_project/media
      - ./django_project/static:/web/django_project/static

  nginx:
    image: nginx
    hostname: nginx
    container_name: nginx
    command: nginx -g 'daemon off;'
    restart: on-failure
    depends_on:
      - web
    networks: 
      - main
    expose:
      - "80"
    ports: 
      - "80:80"
    volumes: 
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./django_project/media:/web/django_project/media
      - ./django_project/static:/web/django_project/static


networks:
  main:

volumes:
  static:
  media:
  data:
